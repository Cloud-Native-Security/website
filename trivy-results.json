{
  "SchemaVersion": 2,
  "CreatedAt": "2024-01-29T17:08:57.549154236Z",
  "ArtifactName": "docker.io/anaisurlichs/cns-website:c7144588c571bf379e9ffaf2fa979200d5e697b6",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.17.7"
    },
    "ImageID": "sha256:25d2c9ec439b32cf4989014859c7a64487cd3cd23d351a67981bfd7cffecb7ee",
    "DiffIDs": [
      "sha256:f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c",
      "sha256:cbe466e5e6d03d4d109488ee48f1da6b0b736beb236600880d347225a524bca6",
      "sha256:69f5264c89b04c4761f579c325b5eecd102ae4921735f28163ae2246d1c4c2e4",
      "sha256:571e16e56ac6cfeb483a3d29917221efe88707b730a5631923425c13ce1357e1",
      "sha256:eb96d7c5ddb880b7c865619f69471cb4a784927dd5d537de91a119d1e51081e2",
      "sha256:729d247f77b35f782939c51b81d0059a1cfdea6c64fe34fa6267a74c6c3d7a09",
      "sha256:41f8f6af7bd8d86f3a2ae634dd372d35b0eafdcd9bbaac1b9ac0428f8d040399",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:efdaf8195d9ca9088d0cb119366e99c1d929d87d07c861711d9f84636e00fb97"
    ],
    "RepoTags": [
      "anaisurlichs/cns-website:c7144588c571bf379e9ffaf2fa979200d5e697b6"
    ],
    "RepoDigests": [
      "anaisurlichs/cns-website@sha256:68a13d7619fbeadb330f5515fdca746679b20c91d1ea3341d6f6c0dec69c35f0"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2024-01-29T17:04:06.96893898Z",
      "history": [
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "/bin/sh -c #(nop) ADD file:c44c9bd36ba35cc78fb9396304ea008def9f42a3beef76aa33b2cf1fde1c10b3 in / "
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "ENV NGINX_VERSION=1.24.0",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "ENV PKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "RUN /bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"dc47dbaeb1c0874b264d34ddfec40e7d2b814e7db48d144e12d5991c743ef5fcf780ecbab72324e562dd84bb9c0e4dd71d14850b20ceaf470c46f8fe7510275b *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make base                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "COPY docker-entrypoint.sh / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "EXPOSE map[80/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "STOPSIGNAL SIGQUIT",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "ENV NJS_VERSION=0.7.12",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2023-04-11T19:57:20Z",
          "created_by": "RUN /bin/sh -c set -x     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"dc47dbaeb1c0874b264d34ddfec40e7d2b814e7db48d144e12d5991c743ef5fcf780ecbab72324e562dd84bb9c0e4dd71d14850b20ceaf470c46f8fe7510275b *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make module-geoip module-image-filter module-njs module-xslt                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache curl ca-certificates # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-29T17:03:24.811686548Z",
          "created_by": "WORKDIR /usr/share/nginx/html",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-29T17:04:06.96893898Z",
          "created_by": "COPY /usr/src/app/build . # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-29T17:04:06.96893898Z",
          "created_by": "EXPOSE map[80/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-29T17:04:06.96893898Z",
          "created_by": "ENTRYPOINT [\"nginx\" \"-g\" \"daemon off;\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:f4111324080ce5b633fab04c0f3f21b587f2ac10a289cc9e2760c67e0d26711c",
          "sha256:cbe466e5e6d03d4d109488ee48f1da6b0b736beb236600880d347225a524bca6",
          "sha256:69f5264c89b04c4761f579c325b5eecd102ae4921735f28163ae2246d1c4c2e4",
          "sha256:571e16e56ac6cfeb483a3d29917221efe88707b730a5631923425c13ce1357e1",
          "sha256:eb96d7c5ddb880b7c865619f69471cb4a784927dd5d537de91a119d1e51081e2",
          "sha256:729d247f77b35f782939c51b81d0059a1cfdea6c64fe34fa6267a74c6c3d7a09",
          "sha256:41f8f6af7bd8d86f3a2ae634dd372d35b0eafdcd9bbaac1b9ac0428f8d040399",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:efdaf8195d9ca9088d0cb119366e99c1d929d87d07c861711d9f84636e00fb97"
        ]
      },
      "config": {
        "Entrypoint": [
          "nginx",
          "-g",
          "daemon off;"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "NGINX_VERSION=1.24.0",
          "PKG_RELEASE=1",
          "NJS_VERSION=0.7.12"
        ],
        "Labels": {
          "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
        },
        "WorkingDir": "/usr/share/nginx/html",
        "ExposedPorts": {
          "80/tcp": {}
        },
        "ArgsEscaped": true,
        "StopSignal": "SIGQUIT"
      }
    }
  },
  "Results": [
    {
      "Target": "docker.io/anaisurlichs/cns-website:c7144588c571bf379e9ffaf2fa979200d5e697b6 (alpine 3.17.7)",
      "Class": "os-pkgs",
      "Type": "alpine"
    }
  ]
}
